#
# Copyright 2018-2019 the Justify authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

LINE_WITH_LOCATION=[{row},{col}] {message}
LINE_WITH_POINTER=[{pointer}] {message}
LINE_WITH_BOTH=[{row},{col}][{pointer}] {message}

# InstanceType enumerators
InstanceType.NULL=null
InstanceType.BOOLEAN=boolean
InstanceType.OBJECT=object
InstanceType.ARRAY=array
InstanceType.NUMBER=number
InstanceType.STRING=string
InstanceType.INTEGER=integer

# Problems for any type
INSTANCE_PROBLEM_TYPE=预期类型是{expected},但实际是{actual}.
INSTANCE_PROBLEM_TYPE_PLURAL=预期项类型是{expected},但实际是{actual}..
INSTANCE_PROBLEM_ENUM=值不在限定{expected}内.
INSTANCE_PROBLEM_CONST=值应当是常量类型 {expectedType} {expected}.

INSTANCE_PROBLEM_NOT_TYPE=值应当是非{expected}类型.
INSTANCE_PROBLEM_NOT_TYPE_PLURAL=预期项类型应当非{expected}, 但实际是{actual}.
INSTANCE_PROBLEM_NOT_ENUM=值应当是非{expected}范围.
INSTANCE_PROBLEM_NOT_CONST=值应当是非常量{expectedType}类型范围所{expected}.

# Problems for numeric type
INSTANCE_PROBLEM_MULTIPLEOF=数值类型应当是{factor}.
INSTANCE_PROBLEM_MAXIMUM=给定值应当小于等于{limit}.
INSTANCE_PROBLEM_EXCLUSIVEMAXIMUM=给定值应当小于{limit}.
INSTANCE_PROBLEM_MINIMUM=给定值应当大于等于{limit}.
INSTANCE_PROBLEM_EXCLUSIVEMINIMUM=给定值应当大于{limit}.

INSTANCE_PROBLEM_NOT_MULTIPLEOF=给定值类型不应当是{factor}.

# Problems for string type
INSTANCE_PROBLEM_MAXLENGTH={localizedSubject}长度应当最多{limit},但实际长度是{actual}.
INSTANCE_PROBLEM_MINLENGTH={localizedSubject}长度应当最少{limit},但实际长度是{actual}..
INSTANCE_PROBLEM_PATTERN={localizedSubject}应当符合格式"{pattern}".

INSTANCE_PROBLEM_NOT_MAXLENGTH={localizedSubject}长度应当不小于{limit},但实际长度是{actual}.
INSTANCE_PROBLEM_NOT_MINLENGTH={localizedSubject}长度应当不大于{limit},但实际长度是{actual}.
INSTANCE_PROBLEM_NOT_PATTERN={localizedSubject}应当符合格式"{pattern}".

STRING_KEY=key name
STRING_VALUE=string value

# Problems for arrays
INSTANCE_PROBLEM_MAXITEMS=数组至多含有{limit}个元素,但实际个数为{actual}.
INSTANCE_PROBLEM_MINITEMS=数组至少含有{limit}个元素,但实际个数为{actual}.
INSTANCE_PROBLEM_UNIQUEITEMS=数组元素唯一性冲突.
INSTANCE_PROBLEM_CONTAINS=数组应至少包含一个元素.

INSTANCE_PROBLEM_MINCONTAINS=数组应至少包含{limit}个元素.
INSTANCE_PROBLEM_MAXCONTAINS=数组应至多包含{limit}个元素.

INSTANCE_PROBLEM_REDUNDANT_ITEM=数组下标{index}元素应当为空.

INSTANCE_PROBLEM_NOT_UNIQUEITEMS=数组必须包含重复元素.

INSTANCE_PROBLEM_ARRAY_EMPTY=数组不可为空.

# Problems for objects
INSTANCE_PROBLEM_REQUIRED=缺少非缺省项"{required}".
INSTANCE_PROBLEM_MAXPROPERTIES=对象最多有{limit}字段,但实际却为{actual}.
INSTANCE_PROBLEM_MINPROPERTIES=对象最少有{limit}字段,但实际却为{actual}.
INSTANCE_PROBLEM_DEPENDENCIES=对象必须包含"{required}"在已经有"{dependant}"字段时.

INSTANCE_PROBLEM_REDUNDANT_PROPERTY=不可包含名字为"{name}"的字段.

INSTANCE_PROBLEM_NOT_REQUIRED=必须包含名字为"{required}"的字段.
INSTANCE_PROBLEM_NOT_REQUIRED_PLURAL=对象不能同时具有{required|quote}字段.
INSTANCE_PROBLEM_NOT_DEPENDENCIES=不可具备"{required}"字段当已经有"{dependant}"字段时.
INSTANCE_PROBLEM_NOT_DEPENDENCIES_PLURAL=不可包含{required|quote}字段当已经具备"{dependant}"字段时.

INSTANCE_PROBLEM_OBJECT_EMPTY=对象非空.
INSTANCE_PROBLEM_OBJECT_NONEMPTY=对象应当为空.

# Problems for boolean logic
INSTANCE_PROBLEM_ANYOF=至少解决以下问题.
INSTANCE_PROBLEM_ONEOF_FEW=至少解决以下其一.
INSTANCE_PROBLEM_ONEOF_MANY=至少解决以下大多数.

# Problems for formats
INSTANCE_PROBLEM_FORMAT=满足{localizedAttribute}.
INSTANCE_PROBLEM_NOT_FORMAT=应当不满足{localizedAttribute}.

# Problems for contents
INSTANCE_PROBLEM_CONTENTENCODING=编码要求{encoding}.
INSTANCE_PROBLEM_NOT_CONTENTENCODING=编码不应当是{encoding}.
INSTANCE_PROBLEM_CONTENTMEDIATYPE=内容类型要求"{type}".
INSTANCE_PROBLEM_NOT_CONTENTMEDIATYPE=内容类型不应当是"{type}".

# Format attributes
FORMAT_DATE=日期
FORMAT_DATE_TIME=日期和时间
FORMAT_EMAIL=邮箱地址
FORMAT_HOSTNAME=主机名称
FORMAT_IDN_EMAIL=国际邮箱地址
FORMAT_IDN_HOSTNAME=国际主机名称
FORMAT_IPV4=IPv4地址
FORMAT_IPV6=IPv6地址
FORMAT_IRI=IRI
FORMAT_IRI_REFERENCE=IRI 引用
FORMAT_JSON_POINTER=JSON 指针
FORMAT_REGEX=正则表达式
FORMAT_RELATIVE_JSON_POINTER=相对 JSON 指针
FORMAT_TIME=时间
FORMAT_URI=URI
FORMAT_URI_REFERENCE=URI 引用
FORMAT_URI_TEMPLATE=URI 模板

# Problems for others
INSTANCE_PROBLEM_NOT_FOUND=对象不存在,路径"{path}".
INSTANCE_PROBLEM_UNKNOWN=为通过验证.

# Problems for schema
SCHEMA_PROBLEM_NOT_FOUND=校验规则文件不存在,"{path}".
SCHEMA_PROBLEM_EMPTY=输入不可空.
SCHEMA_PROBLEM_EOI=校验规则文件解析失败.
SCHEMA_PROBLEM_REFERENCE=校验文件"{ref}"({targetId})不识别.
SCHEMA_PROBLEM_REFERENCE_LOOP=校验规则引用死循环.
SCHEMA_PROBLEM_KEYWORD_UNKNOWN="{keyword}"不识别.
SCHEMA_PROBLEM_FORMAT_UNKNOWN="{attribute}"格式不识别.
SCHEMA_PROBLEM_CONTENTMEDIATYPE_INVALID=值应当是介质类型.
SCHEMA_PROBLEM_VERSION_UNEXPECTED=非预期元数据,要求{expected|quote},实际"{actual}".
SCHEMA_PROBLEM_VERSION_UNSUPPORTED=不支持"{schema}".

# JSON-P parser
PARSER_ILLEGAL_STATE=解析器#{method}()调用状态异常. \
当前事件是{event}.
PARSER_UNEXPECTED_EOI=非预期的输入结束. 解析事件应当是: {expected}.

# JSON-P reader
READER_UNEXPECTED_EOI=非预期的输入结束.
READER_READ_ERROR=解析器#read() 仅限于起始符为[ 或 { \
但当前解析事件是{event}
