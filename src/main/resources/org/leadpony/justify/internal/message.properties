#
# Copyright 2018 the Justify authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
format=${location} ${message}

location=(line:${row} column:${col})
location.unkown=(unknown)

InstanceType.NULL=null
InstanceType.BOOLEAN=boolean
InstanceType.OBJECT=object
InstanceType.ARRAY=array
InstanceType.NUMBER=number
InstanceType.STRING=string
InstanceType.INTEGER=integer

instance.problem.const=Expected value is constant ${expected}, but was ${actual}.
instance.problem.enum=Expected value is one of ${expected}, but was ${actual}.
instance.problem.exclusive.max.length=String consists of ${actual} character(s) and is too long. It must have less than ${bound} character(s).
instance.problem.exclusive.maximum=Numeric value ${actual} is too big, must be less than ${bound}.
instance.problem.exclusive.min.length=String consists of ${actual} character(s) and is too short. It must have more than ${bound} character(s).
instance.problem.exclusive.minimum=Numeric value ${actual} is too small, must be greater than ${bound}.
instance.problem.max.items=Array has too many items. Its size must be at most ${bound}, but was ${actual}.
instance.problem.max.length=String consists of ${actual} character(s) and is too long. It must have at most ${bound} character(s).
instance.problem.max.properties=Object has too many properties. Its size must be at most ${bound}, but was ${actual}.
instance.problem.maximum=Numeric value ${actual} is too big, must be less than or equal to ${bound}.
instance.problem.min.items=Array has too few items. Its size must be at least ${bound}, but was ${actual}.
instance.problem.min.length=String consists of ${actual} character(s) and is too short. It must have at least ${bound} character(s).
instance.problem.min.properties=Object has too few properties. Its size must be at least ${bound}, but was ${actual}.
instance.problem.minimum=Numeric value ${actual} is too small, must be greater than or equal to ${bound}.
instance.problem.multiple.of=Numeric value ${actual} is not multiple of ${divisor}.
instance.problem.pattern=String value does not match regex pattern ${pattern}.
instance.problem.required=Object must have required property ${expected}.
instance.problem.required.plural=Object must have required properties ${expected}.
instance.problem.type=Type of value must be ${expected}, but was ${actual}.
instance.problem.type.plural=Type of value must be one of ${expected}, but was ${actual}.
instance.problem.unique.items=Array has duplicated values at index ${lastIndex} and ${index}.

instance.problem.redundant.property=Object has a redundant property ${name} as a member.
instance.problem.redundant.item=Array has a redundant item at index ${index}.

instance.problem.not.type=Type of value must not be ${expected}.
instance.problem.not.type.plural=Type of value must be other than ${expected}, but was ${actual}.
instance.problem.not.required=Object must not have property ${expected}.
instance.problem.not.required.plural=Object has too exhaustive properties. At least one of ${expected} must be left out.
instance.problem.not.const=Value must not be ${expected}.

instance.problem.one.of=Two or more subschemas are satisfied simultaneously. It must be exactly one.
instance.problem.unknown=Evaluated as invalid for an unknown reason.

schema.problem.dereference=Failed to resolve a JSON schema whose ID is "${ref}".

internal.error=Internal Error

parser.unexpected.eoi=Unexpected end of input. Expected parser events are: ${expected}.
parser.invalid.token=Invalid token=${actual} at ${location}. Expected tokens are: ${expected}

reader.unexpected.eoi=Unexpected end of input.
reader.read.error=JsonReader#read() is valid only for START_ARRAY, START_OBJECT parser events. \
But current parser event is ${event}
